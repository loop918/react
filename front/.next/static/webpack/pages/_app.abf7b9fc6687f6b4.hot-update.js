"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ADD_COMMENT_FAILURE\": function() { return /* binding */ ADD_COMMENT_FAILURE; },\n/* harmony export */   \"ADD_COMMENT_REQUEST\": function() { return /* binding */ ADD_COMMENT_REQUEST; },\n/* harmony export */   \"ADD_COMMENT_SUCCESS\": function() { return /* binding */ ADD_COMMENT_SUCCESS; },\n/* harmony export */   \"ADD_POST_FAILURE\": function() { return /* binding */ ADD_POST_FAILURE; },\n/* harmony export */   \"ADD_POST_REQUEST\": function() { return /* binding */ ADD_POST_REQUEST; },\n/* harmony export */   \"ADD_POST_SUCCESS\": function() { return /* binding */ ADD_POST_SUCCESS; },\n/* harmony export */   \"LIKE_POST_FAILURE\": function() { return /* binding */ LIKE_POST_FAILURE; },\n/* harmony export */   \"LIKE_POST_REQUEST\": function() { return /* binding */ LIKE_POST_REQUEST; },\n/* harmony export */   \"LIKE_POST_SUCCESS\": function() { return /* binding */ LIKE_POST_SUCCESS; },\n/* harmony export */   \"LOAD_POSTS_FAILURE\": function() { return /* binding */ LOAD_POSTS_FAILURE; },\n/* harmony export */   \"LOAD_POSTS_REQUEST\": function() { return /* binding */ LOAD_POSTS_REQUEST; },\n/* harmony export */   \"LOAD_POSTS_SUCCESS\": function() { return /* binding */ LOAD_POSTS_SUCCESS; },\n/* harmony export */   \"REMOVE_POST_FAILURE\": function() { return /* binding */ REMOVE_POST_FAILURE; },\n/* harmony export */   \"REMOVE_POST_REQUEST\": function() { return /* binding */ REMOVE_POST_REQUEST; },\n/* harmony export */   \"REMOVE_POST_SUCCESS\": function() { return /* binding */ REMOVE_POST_SUCCESS; },\n/* harmony export */   \"UNLIKE_POST_FAILURE\": function() { return /* binding */ UNLIKE_POST_FAILURE; },\n/* harmony export */   \"UNLIKE_POST_REQUEST\": function() { return /* binding */ UNLIKE_POST_REQUEST; },\n/* harmony export */   \"UNLIKE_POST_SUCCESS\": function() { return /* binding */ UNLIKE_POST_SUCCESS; },\n/* harmony export */   \"UPLOAD_IMAGES_FAILUER\": function() { return /* binding */ UPLOAD_IMAGES_FAILUER; },\n/* harmony export */   \"UPLOAD_IMAGES_REQUEST\": function() { return /* binding */ UPLOAD_IMAGES_REQUEST; },\n/* harmony export */   \"UPLOAD_IMAGES_SUCCESS\": function() { return /* binding */ UPLOAD_IMAGES_SUCCESS; },\n/* harmony export */   \"addComment\": function() { return /* binding */ addComment; },\n/* harmony export */   \"addPost\": function() { return /* binding */ addPost; },\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"initialState\": function() { return /* binding */ initialState; },\n/* harmony export */   \"likePost\": function() { return /* binding */ likePost; },\n/* harmony export */   \"unlikePost\": function() { return /* binding */ unlikePost; }\n/* harmony export */ });\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.mjs\");\n\nvar initialState = {\n    mainPosts: [],\n    imagePaths: [],\n    hasMorePost: true,\n    likePostLoading: false,\n    likePostDone: false,\n    likePostError: null,\n    unlikePostLoading: false,\n    unlikePostDone: false,\n    unlikePostError: null,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null\n};\n// ACTION \nvar LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nvar LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nvar LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nvar UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nvar UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nvar UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nvar LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nvar LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nvar LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nvar ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nvar ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nvar ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nvar REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nvar REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nvar REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nvar ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nvar ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nvar ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nvar UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nvar UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nvar UPLOAD_IMAGES_FAILUER = \"UPLOAD_IMAGES_FAILUER\";\nvar likePost = function(data) {\n    return {\n        type: LIKE_POST_REQUEST,\n        data: data\n    };\n};\nvar unlikePost = function(data) {\n    return {\n        type: UNLIKE_POST_REQUEST,\n        data: data\n    };\n};\nvar addPost = function(data) {\n    return {\n        type: ADD_POST_REQUEST,\n        data: data\n    };\n};\nvar addComment = function(data) {\n    return {\n        type: ADD_COMMENT_REQUEST,\n        data: data\n    };\n};\n// reducer : \"이전 상태\"를 액션을 통해 \"다음 상태\"를 만들어내는 함수, 단 불변성을 지키면서!\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n    var state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialState, action = arguments.length > 1 ? arguments[1] : void 0;\n    // immer 적용.\n    return (0,immer__WEBPACK_IMPORTED_MODULE_0__.produce)(state, function(draft) {\n        // ACTION\n        switch(action.type){\n            // LIKE (좋아요).\n            case LIKE_POST_REQUEST:\n                draft.likePostLoading = true;\n                draft.likePostError = null;\n                break;\n            case LIKE_POST_SUCCESS:\n                {\n                    var post = draft.mainPosts.find(function(v) {\n                        return v.id === action.data.PostId;\n                    });\n                    post.Likers.push({\n                        id: action.data.UserId\n                    }); // 좋아요 누른 사람 추가.\n                    draft.likePostLoading = false;\n                    draft.likePostDone = true;\n                    break;\n                }\n            case LIKE_POST_FAILURE:\n                draft.likePostLoading = false;\n                draft.likePostError = action.error;\n                break;\n            // UNLIKE (좋아요 해제).\n            case UNLIKE_POST_REQUEST:\n                draft.unlikePostLoading = true;\n                draft.unlikePostError = null;\n                break;\n            case UNLIKE_POST_SUCCESS:\n                {\n                    var post1 = draft.mainPosts.find(function(v) {\n                        return v.id === action.data.PostId;\n                    });\n                    post1.Likers = post1.Likers.filter(function(v) {\n                        return v.id !== action.data.UserId;\n                    }); // 싫어요 누른 사람 삭제.\n                    draft.unlikePostLoading = false;\n                    draft.unlikePostDone = true;\n                    break;\n                }\n            case UNLIKE_POST_FAILURE:\n                draft.unlikePostLoading = false;\n                draft.unlikePostError = action.error;\n                break;\n            // 글 추가\n            case LOAD_POSTS_REQUEST:\n                draft.loadPostsLoading = true;\n                draft.loadPostsDone = false;\n                draft.loadPostsError = null;\n                break;\n            case LOAD_POSTS_SUCCESS:\n                draft.loadPostsLoading = false;\n                draft.loadPostsDone = true;\n                draft.mainPosts = action.data.concat(draft.mainPosts); // 기존 게시글에 추가.\n                draft.hasMorePost = draft.mainPosts.length < 50;\n                break;\n            case LOAD_POSTS_FAILURE:\n                draft.loadPostsLoading = false;\n                draft.loadPostsError = action.error;\n                break;\n            // 글 추가\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = null;\n                break;\n            case ADD_POST_SUCCESS:\n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.mainPosts.unshift(action.data);\n                break;\n            case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n            // 글 삭제\n            case REMOVE_POST_REQUEST:\n                draft.removePostLoading = true;\n                draft.removePostError = null;\n                break;\n            case REMOVE_POST_SUCCESS:\n                draft.mainPosts = state.mainPosts.filter(function(v) {\n                    return v.id !== action.data.PostId;\n                });\n                draft.removePostLoading = false;\n                draft.removePostDone = true;\n                break;\n            case REMOVE_POST_FAILURE:\n                draft.removePostLoading = false;\n                draft.removePostError = action.error;\n                break;\n            // 댓글 추가\n            case ADD_COMMENT_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostError = null;\n                break;\n            case ADD_COMMENT_SUCCESS:\n                var post2 = draft.mainPosts.find(function(v) {\n                    return v.id === action.data.PostId;\n                }); //  해당 게시글 찾기 (댓글 달릴..)\n                post2.Comments.unshift(action.data); // 해당 게시글에 입력한 댓글 넣어주기\n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                break;\n            case ADD_COMMENT_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n            default:\n                break;\n        }\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/post.js\n"));

/***/ })

});